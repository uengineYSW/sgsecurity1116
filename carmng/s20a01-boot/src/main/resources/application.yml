server:
  port: 8080


spring:
  application:
    name: carmng
---

spring:
  profiles: default
  datasource:
    url: ${datasource.url}
    username: ${datasource.username}
    password: ${datasource.password}
    driver-class-name: ${datasource.driver-class-name}
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl

eureka:
  client:
    enabled: true
    service-url:
      defaultZone: http://localhost:8761/eureka
    enabled: false
    fetch-registry: false
    register-with-eureka: false

mybatis:
  type-aliases-package: com.posco..s20a01.domain.carmng.mybatis
  mapper-locations: classpath:mybatis.mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true
    default-fetch-size: 250

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug


server:
  port: 8082

---

spring:
  profiles: docker
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl


server:
  port: 8082

---

spring:
  profiles: docker
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: carmng
          destination: sg
          contentType: application/json
        event-out:
          destination: sg
          contentType: application/json


